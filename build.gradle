plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.9"
    id("io.micronaut.test-resources") version "3.7.9"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.7.1"
}

version = "0.1"
group = "com.mns"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("org.graalvm.nativeimage:svm")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("org.awaitility:awaitility:4.2.0")
    implementation "org.apache.avro:avro:1.11.0"
    implementation("io.micronaut.tracing:micronaut-tracing-opentelemetry-http")
    implementation("io.micronaut.tracing:micronaut-tracing-opentelemetry-kafka")
    implementation("io.micronaut.tracing:micronaut-tracing-opentelemetry-grpc")
    testImplementation("io.opentelemetry:opentelemetry-sdk-testing")
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    testImplementation 'org.testcontainers:kafka:1.18.1'


}

application {
    mainClass.set("com.mns.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.mns.*")
    }
    testResources {
        sharedServer = true
    }
}



